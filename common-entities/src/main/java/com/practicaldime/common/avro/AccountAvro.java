/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.practicaldime.common.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class AccountAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2583569526562882620L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AccountAvro\",\"namespace\":\"com.practicaldime.common.avro\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"string\"]},{\"name\":\"username\",\"type\":\"string\"},{\"name\":\"password\",\"type\":\"string\"},{\"name\":\"role\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"AccRoleAvro\",\"symbols\":[\"admin\",\"super_user\",\"user\",\"guest\"]}]},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"AccStatusAvro\",\"symbols\":[\"active\",\"pending\",\"inactive\",\"hidden\"]}]},{\"name\":\"datetime\",\"type\":\"string\"},{\"name\":\"profile\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ProfileAvro\",\"fields\":[{\"name\":\"id\",\"type\":[\"string\",\"null\"]},{\"name\":\"firstName\",\"type\":[\"string\",\"null\"]},{\"name\":\"lastName\",\"type\":[\"string\",\"null\"]},{\"name\":\"emailAddress\",\"type\":\"string\"},{\"name\":\"emailVerified\",\"type\":\"boolean\",\"default\":false},{\"name\":\"phoneNumber\",\"type\":[\"string\",\"null\"]},{\"name\":\"phoneVerified\",\"type\":\"boolean\",\"default\":false},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LocationAvro\",\"fields\":[{\"name\":\"id\",\"type\":[\"string\",\"null\"]},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"county\",\"type\":[\"string\",\"null\"]},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"zip\",\"type\":[\"string\",\"null\"]},{\"name\":\"country\",\"type\":[\"string\",\"null\"]},{\"name\":\"updatedBy\",\"type\":[\"string\",\"null\"]},{\"name\":\"createdTs\",\"type\":[\"string\",\"null\"]}]}]},{\"name\":\"updatedBy\",\"type\":[\"string\",\"null\"]},{\"name\":\"createdTs\",\"type\":[\"string\",\"null\"]}]}]},{\"name\":\"updatedBy\",\"type\":[\"string\",\"null\"]},{\"name\":\"createdTs\",\"type\":[\"string\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AccountAvro> ENCODER =
      new BinaryMessageEncoder<AccountAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AccountAvro> DECODER =
      new BinaryMessageDecoder<AccountAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<AccountAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<AccountAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<AccountAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AccountAvro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this AccountAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a AccountAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a AccountAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static AccountAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence id;
  @Deprecated public java.lang.CharSequence username;
  @Deprecated public java.lang.CharSequence password;
  @Deprecated public com.practicaldime.common.avro.AccRoleAvro role;
  @Deprecated public com.practicaldime.common.avro.AccStatusAvro status;
  @Deprecated public java.lang.CharSequence datetime;
  @Deprecated public com.practicaldime.common.avro.ProfileAvro profile;
  @Deprecated public java.lang.CharSequence updatedBy;
  @Deprecated public java.lang.CharSequence createdTs;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AccountAvro() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param username The new value for username
   * @param password The new value for password
   * @param role The new value for role
   * @param status The new value for status
   * @param datetime The new value for datetime
   * @param profile The new value for profile
   * @param updatedBy The new value for updatedBy
   * @param createdTs The new value for createdTs
   */
  public AccountAvro(java.lang.CharSequence id, java.lang.CharSequence username, java.lang.CharSequence password, com.practicaldime.common.avro.AccRoleAvro role, com.practicaldime.common.avro.AccStatusAvro status, java.lang.CharSequence datetime, com.practicaldime.common.avro.ProfileAvro profile, java.lang.CharSequence updatedBy, java.lang.CharSequence createdTs) {
    this.id = id;
    this.username = username;
    this.password = password;
    this.role = role;
    this.status = status;
    this.datetime = datetime;
    this.profile = profile;
    this.updatedBy = updatedBy;
    this.createdTs = createdTs;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return username;
    case 2: return password;
    case 3: return role;
    case 4: return status;
    case 5: return datetime;
    case 6: return profile;
    case 7: return updatedBy;
    case 8: return createdTs;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: username = (java.lang.CharSequence)value$; break;
    case 2: password = (java.lang.CharSequence)value$; break;
    case 3: role = (com.practicaldime.common.avro.AccRoleAvro)value$; break;
    case 4: status = (com.practicaldime.common.avro.AccStatusAvro)value$; break;
    case 5: datetime = (java.lang.CharSequence)value$; break;
    case 6: profile = (com.practicaldime.common.avro.ProfileAvro)value$; break;
    case 7: updatedBy = (java.lang.CharSequence)value$; break;
    case 8: createdTs = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'username' field.
   * @return The value of the 'username' field.
   */
  public java.lang.CharSequence getUsername() {
    return username;
  }


  /**
   * Sets the value of the 'username' field.
   * @param value the value to set.
   */
  public void setUsername(java.lang.CharSequence value) {
    this.username = value;
  }

  /**
   * Gets the value of the 'password' field.
   * @return The value of the 'password' field.
   */
  public java.lang.CharSequence getPassword() {
    return password;
  }


  /**
   * Sets the value of the 'password' field.
   * @param value the value to set.
   */
  public void setPassword(java.lang.CharSequence value) {
    this.password = value;
  }

  /**
   * Gets the value of the 'role' field.
   * @return The value of the 'role' field.
   */
  public com.practicaldime.common.avro.AccRoleAvro getRole() {
    return role;
  }


  /**
   * Sets the value of the 'role' field.
   * @param value the value to set.
   */
  public void setRole(com.practicaldime.common.avro.AccRoleAvro value) {
    this.role = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public com.practicaldime.common.avro.AccStatusAvro getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(com.practicaldime.common.avro.AccStatusAvro value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'datetime' field.
   * @return The value of the 'datetime' field.
   */
  public java.lang.CharSequence getDatetime() {
    return datetime;
  }


  /**
   * Sets the value of the 'datetime' field.
   * @param value the value to set.
   */
  public void setDatetime(java.lang.CharSequence value) {
    this.datetime = value;
  }

  /**
   * Gets the value of the 'profile' field.
   * @return The value of the 'profile' field.
   */
  public com.practicaldime.common.avro.ProfileAvro getProfile() {
    return profile;
  }


  /**
   * Sets the value of the 'profile' field.
   * @param value the value to set.
   */
  public void setProfile(com.practicaldime.common.avro.ProfileAvro value) {
    this.profile = value;
  }

  /**
   * Gets the value of the 'updatedBy' field.
   * @return The value of the 'updatedBy' field.
   */
  public java.lang.CharSequence getUpdatedBy() {
    return updatedBy;
  }


  /**
   * Sets the value of the 'updatedBy' field.
   * @param value the value to set.
   */
  public void setUpdatedBy(java.lang.CharSequence value) {
    this.updatedBy = value;
  }

  /**
   * Gets the value of the 'createdTs' field.
   * @return The value of the 'createdTs' field.
   */
  public java.lang.CharSequence getCreatedTs() {
    return createdTs;
  }


  /**
   * Sets the value of the 'createdTs' field.
   * @param value the value to set.
   */
  public void setCreatedTs(java.lang.CharSequence value) {
    this.createdTs = value;
  }

  /**
   * Creates a new AccountAvro RecordBuilder.
   * @return A new AccountAvro RecordBuilder
   */
  public static com.practicaldime.common.avro.AccountAvro.Builder newBuilder() {
    return new com.practicaldime.common.avro.AccountAvro.Builder();
  }

  /**
   * Creates a new AccountAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AccountAvro RecordBuilder
   */
  public static com.practicaldime.common.avro.AccountAvro.Builder newBuilder(com.practicaldime.common.avro.AccountAvro.Builder other) {
    if (other == null) {
      return new com.practicaldime.common.avro.AccountAvro.Builder();
    } else {
      return new com.practicaldime.common.avro.AccountAvro.Builder(other);
    }
  }

  /**
   * Creates a new AccountAvro RecordBuilder by copying an existing AccountAvro instance.
   * @param other The existing instance to copy.
   * @return A new AccountAvro RecordBuilder
   */
  public static com.practicaldime.common.avro.AccountAvro.Builder newBuilder(com.practicaldime.common.avro.AccountAvro other) {
    if (other == null) {
      return new com.practicaldime.common.avro.AccountAvro.Builder();
    } else {
      return new com.practicaldime.common.avro.AccountAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for AccountAvro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AccountAvro>
    implements org.apache.avro.data.RecordBuilder<AccountAvro> {

    private java.lang.CharSequence id;
    private java.lang.CharSequence username;
    private java.lang.CharSequence password;
    private com.practicaldime.common.avro.AccRoleAvro role;
    private com.practicaldime.common.avro.AccStatusAvro status;
    private java.lang.CharSequence datetime;
    private com.practicaldime.common.avro.ProfileAvro profile;
    private com.practicaldime.common.avro.ProfileAvro.Builder profileBuilder;
    private java.lang.CharSequence updatedBy;
    private java.lang.CharSequence createdTs;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.practicaldime.common.avro.AccountAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.username)) {
        this.username = data().deepCopy(fields()[1].schema(), other.username);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.password)) {
        this.password = data().deepCopy(fields()[2].schema(), other.password);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.role)) {
        this.role = data().deepCopy(fields()[3].schema(), other.role);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.status)) {
        this.status = data().deepCopy(fields()[4].schema(), other.status);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.datetime)) {
        this.datetime = data().deepCopy(fields()[5].schema(), other.datetime);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.profile)) {
        this.profile = data().deepCopy(fields()[6].schema(), other.profile);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (other.hasProfileBuilder()) {
        this.profileBuilder = com.practicaldime.common.avro.ProfileAvro.newBuilder(other.getProfileBuilder());
      }
      if (isValidValue(fields()[7], other.updatedBy)) {
        this.updatedBy = data().deepCopy(fields()[7].schema(), other.updatedBy);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.createdTs)) {
        this.createdTs = data().deepCopy(fields()[8].schema(), other.createdTs);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing AccountAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.practicaldime.common.avro.AccountAvro other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.username)) {
        this.username = data().deepCopy(fields()[1].schema(), other.username);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.password)) {
        this.password = data().deepCopy(fields()[2].schema(), other.password);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.role)) {
        this.role = data().deepCopy(fields()[3].schema(), other.role);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.status)) {
        this.status = data().deepCopy(fields()[4].schema(), other.status);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.datetime)) {
        this.datetime = data().deepCopy(fields()[5].schema(), other.datetime);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.profile)) {
        this.profile = data().deepCopy(fields()[6].schema(), other.profile);
        fieldSetFlags()[6] = true;
      }
      this.profileBuilder = null;
      if (isValidValue(fields()[7], other.updatedBy)) {
        this.updatedBy = data().deepCopy(fields()[7].schema(), other.updatedBy);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.createdTs)) {
        this.createdTs = data().deepCopy(fields()[8].schema(), other.createdTs);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.practicaldime.common.avro.AccountAvro.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.practicaldime.common.avro.AccountAvro.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'username' field.
      * @return The value.
      */
    public java.lang.CharSequence getUsername() {
      return username;
    }


    /**
      * Sets the value of the 'username' field.
      * @param value The value of 'username'.
      * @return This builder.
      */
    public com.practicaldime.common.avro.AccountAvro.Builder setUsername(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.username = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'username' field has been set.
      * @return True if the 'username' field has been set, false otherwise.
      */
    public boolean hasUsername() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'username' field.
      * @return This builder.
      */
    public com.practicaldime.common.avro.AccountAvro.Builder clearUsername() {
      username = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'password' field.
      * @return The value.
      */
    public java.lang.CharSequence getPassword() {
      return password;
    }


    /**
      * Sets the value of the 'password' field.
      * @param value The value of 'password'.
      * @return This builder.
      */
    public com.practicaldime.common.avro.AccountAvro.Builder setPassword(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.password = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'password' field has been set.
      * @return True if the 'password' field has been set, false otherwise.
      */
    public boolean hasPassword() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'password' field.
      * @return This builder.
      */
    public com.practicaldime.common.avro.AccountAvro.Builder clearPassword() {
      password = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'role' field.
      * @return The value.
      */
    public com.practicaldime.common.avro.AccRoleAvro getRole() {
      return role;
    }


    /**
      * Sets the value of the 'role' field.
      * @param value The value of 'role'.
      * @return This builder.
      */
    public com.practicaldime.common.avro.AccountAvro.Builder setRole(com.practicaldime.common.avro.AccRoleAvro value) {
      validate(fields()[3], value);
      this.role = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'role' field has been set.
      * @return True if the 'role' field has been set, false otherwise.
      */
    public boolean hasRole() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'role' field.
      * @return This builder.
      */
    public com.practicaldime.common.avro.AccountAvro.Builder clearRole() {
      role = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public com.practicaldime.common.avro.AccStatusAvro getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.practicaldime.common.avro.AccountAvro.Builder setStatus(com.practicaldime.common.avro.AccStatusAvro value) {
      validate(fields()[4], value);
      this.status = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.practicaldime.common.avro.AccountAvro.Builder clearStatus() {
      status = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'datetime' field.
      * @return The value.
      */
    public java.lang.CharSequence getDatetime() {
      return datetime;
    }


    /**
      * Sets the value of the 'datetime' field.
      * @param value The value of 'datetime'.
      * @return This builder.
      */
    public com.practicaldime.common.avro.AccountAvro.Builder setDatetime(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.datetime = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'datetime' field has been set.
      * @return True if the 'datetime' field has been set, false otherwise.
      */
    public boolean hasDatetime() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'datetime' field.
      * @return This builder.
      */
    public com.practicaldime.common.avro.AccountAvro.Builder clearDatetime() {
      datetime = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'profile' field.
      * @return The value.
      */
    public com.practicaldime.common.avro.ProfileAvro getProfile() {
      return profile;
    }


    /**
      * Sets the value of the 'profile' field.
      * @param value The value of 'profile'.
      * @return This builder.
      */
    public com.practicaldime.common.avro.AccountAvro.Builder setProfile(com.practicaldime.common.avro.ProfileAvro value) {
      validate(fields()[6], value);
      this.profileBuilder = null;
      this.profile = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'profile' field has been set.
      * @return True if the 'profile' field has been set, false otherwise.
      */
    public boolean hasProfile() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'profile' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.practicaldime.common.avro.ProfileAvro.Builder getProfileBuilder() {
      if (profileBuilder == null) {
        if (hasProfile()) {
          setProfileBuilder(com.practicaldime.common.avro.ProfileAvro.newBuilder(profile));
        } else {
          setProfileBuilder(com.practicaldime.common.avro.ProfileAvro.newBuilder());
        }
      }
      return profileBuilder;
    }

    /**
     * Sets the Builder instance for the 'profile' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.practicaldime.common.avro.AccountAvro.Builder setProfileBuilder(com.practicaldime.common.avro.ProfileAvro.Builder value) {
      clearProfile();
      profileBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'profile' field has an active Builder instance
     * @return True if the 'profile' field has an active Builder instance
     */
    public boolean hasProfileBuilder() {
      return profileBuilder != null;
    }

    /**
      * Clears the value of the 'profile' field.
      * @return This builder.
      */
    public com.practicaldime.common.avro.AccountAvro.Builder clearProfile() {
      profile = null;
      profileBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'updatedBy' field.
      * @return The value.
      */
    public java.lang.CharSequence getUpdatedBy() {
      return updatedBy;
    }


    /**
      * Sets the value of the 'updatedBy' field.
      * @param value The value of 'updatedBy'.
      * @return This builder.
      */
    public com.practicaldime.common.avro.AccountAvro.Builder setUpdatedBy(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.updatedBy = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'updatedBy' field has been set.
      * @return True if the 'updatedBy' field has been set, false otherwise.
      */
    public boolean hasUpdatedBy() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'updatedBy' field.
      * @return This builder.
      */
    public com.practicaldime.common.avro.AccountAvro.Builder clearUpdatedBy() {
      updatedBy = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdTs' field.
      * @return The value.
      */
    public java.lang.CharSequence getCreatedTs() {
      return createdTs;
    }


    /**
      * Sets the value of the 'createdTs' field.
      * @param value The value of 'createdTs'.
      * @return This builder.
      */
    public com.practicaldime.common.avro.AccountAvro.Builder setCreatedTs(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.createdTs = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'createdTs' field has been set.
      * @return True if the 'createdTs' field has been set, false otherwise.
      */
    public boolean hasCreatedTs() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'createdTs' field.
      * @return This builder.
      */
    public com.practicaldime.common.avro.AccountAvro.Builder clearCreatedTs() {
      createdTs = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AccountAvro build() {
      try {
        AccountAvro record = new AccountAvro();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.username = fieldSetFlags()[1] ? this.username : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.password = fieldSetFlags()[2] ? this.password : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.role = fieldSetFlags()[3] ? this.role : (com.practicaldime.common.avro.AccRoleAvro) defaultValue(fields()[3]);
        record.status = fieldSetFlags()[4] ? this.status : (com.practicaldime.common.avro.AccStatusAvro) defaultValue(fields()[4]);
        record.datetime = fieldSetFlags()[5] ? this.datetime : (java.lang.CharSequence) defaultValue(fields()[5]);
        if (profileBuilder != null) {
          try {
            record.profile = this.profileBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("profile"));
            throw e;
          }
        } else {
          record.profile = fieldSetFlags()[6] ? this.profile : (com.practicaldime.common.avro.ProfileAvro) defaultValue(fields()[6]);
        }
        record.updatedBy = fieldSetFlags()[7] ? this.updatedBy : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.createdTs = fieldSetFlags()[8] ? this.createdTs : (java.lang.CharSequence) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AccountAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<AccountAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AccountAvro>
    READER$ = (org.apache.avro.io.DatumReader<AccountAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.id);
    }

    out.writeString(this.username);

    out.writeString(this.password);

    if (this.role == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeEnum(this.role.ordinal());
    }

    if (this.status == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeEnum(this.status.ordinal());
    }

    out.writeString(this.datetime);

    if (this.profile == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.profile.customEncode(out);
    }

    if (this.updatedBy == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.updatedBy);
    }

    if (this.createdTs == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.createdTs);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);
      }

      this.username = in.readString(this.username instanceof Utf8 ? (Utf8)this.username : null);

      this.password = in.readString(this.password instanceof Utf8 ? (Utf8)this.password : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.role = null;
      } else {
        this.role = com.practicaldime.common.avro.AccRoleAvro.values()[in.readEnum()];
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.status = null;
      } else {
        this.status = com.practicaldime.common.avro.AccStatusAvro.values()[in.readEnum()];
      }

      this.datetime = in.readString(this.datetime instanceof Utf8 ? (Utf8)this.datetime : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.profile = null;
      } else {
        if (this.profile == null) {
          this.profile = new com.practicaldime.common.avro.ProfileAvro();
        }
        this.profile.customDecode(in);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.updatedBy = null;
      } else {
        this.updatedBy = in.readString(this.updatedBy instanceof Utf8 ? (Utf8)this.updatedBy : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.createdTs = null;
      } else {
        this.createdTs = in.readString(this.createdTs instanceof Utf8 ? (Utf8)this.createdTs : null);
      }

    } else {
      for (int i = 0; i < 9; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);
          }
          break;

        case 1:
          this.username = in.readString(this.username instanceof Utf8 ? (Utf8)this.username : null);
          break;

        case 2:
          this.password = in.readString(this.password instanceof Utf8 ? (Utf8)this.password : null);
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.role = null;
          } else {
            this.role = com.practicaldime.common.avro.AccRoleAvro.values()[in.readEnum()];
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.status = null;
          } else {
            this.status = com.practicaldime.common.avro.AccStatusAvro.values()[in.readEnum()];
          }
          break;

        case 5:
          this.datetime = in.readString(this.datetime instanceof Utf8 ? (Utf8)this.datetime : null);
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.profile = null;
          } else {
            if (this.profile == null) {
              this.profile = new com.practicaldime.common.avro.ProfileAvro();
            }
            this.profile.customDecode(in);
          }
          break;

        case 7:
          if (in.readIndex() != 0) {
            in.readNull();
            this.updatedBy = null;
          } else {
            this.updatedBy = in.readString(this.updatedBy instanceof Utf8 ? (Utf8)this.updatedBy : null);
          }
          break;

        case 8:
          if (in.readIndex() != 0) {
            in.readNull();
            this.createdTs = null;
          } else {
            this.createdTs = in.readString(this.createdTs instanceof Utf8 ? (Utf8)this.createdTs : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










