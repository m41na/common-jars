/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.practicaldime.common.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ProfileAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 150073716943048491L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ProfileAvro\",\"namespace\":\"com.practicaldime.common.avro\",\"fields\":[{\"name\":\"id\",\"type\":[\"string\",\"null\"]},{\"name\":\"firstName\",\"type\":[\"string\",\"null\"]},{\"name\":\"lastName\",\"type\":[\"string\",\"null\"]},{\"name\":\"emailAddress\",\"type\":\"string\"},{\"name\":\"emailVerified\",\"type\":\"boolean\",\"default\":false},{\"name\":\"phoneNumber\",\"type\":[\"string\",\"null\"]},{\"name\":\"phoneVerified\",\"type\":\"boolean\",\"default\":false},{\"name\":\"address\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"LocationAvro\",\"fields\":[{\"name\":\"id\",\"type\":[\"string\",\"null\"]},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"county\",\"type\":[\"string\",\"null\"]},{\"name\":\"state\",\"type\":\"string\"},{\"name\":\"zip\",\"type\":[\"string\",\"null\"]},{\"name\":\"country\",\"type\":[\"string\",\"null\"]},{\"name\":\"updatedBy\",\"type\":[\"string\",\"null\"]},{\"name\":\"createdTs\",\"type\":[\"string\",\"null\"]}]}]},{\"name\":\"updatedBy\",\"type\":[\"string\",\"null\"]},{\"name\":\"createdTs\",\"type\":[\"string\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ProfileAvro> ENCODER =
      new BinaryMessageEncoder<ProfileAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ProfileAvro> DECODER =
      new BinaryMessageDecoder<ProfileAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ProfileAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ProfileAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ProfileAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ProfileAvro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ProfileAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ProfileAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ProfileAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ProfileAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence id;
  @Deprecated public java.lang.CharSequence firstName;
  @Deprecated public java.lang.CharSequence lastName;
  @Deprecated public java.lang.CharSequence emailAddress;
  @Deprecated public boolean emailVerified;
  @Deprecated public java.lang.CharSequence phoneNumber;
  @Deprecated public boolean phoneVerified;
  @Deprecated public com.practicaldime.common.avro.LocationAvro address;
  @Deprecated public java.lang.CharSequence updatedBy;
  @Deprecated public java.lang.CharSequence createdTs;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ProfileAvro() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param firstName The new value for firstName
   * @param lastName The new value for lastName
   * @param emailAddress The new value for emailAddress
   * @param emailVerified The new value for emailVerified
   * @param phoneNumber The new value for phoneNumber
   * @param phoneVerified The new value for phoneVerified
   * @param address The new value for address
   * @param updatedBy The new value for updatedBy
   * @param createdTs The new value for createdTs
   */
  public ProfileAvro(java.lang.CharSequence id, java.lang.CharSequence firstName, java.lang.CharSequence lastName, java.lang.CharSequence emailAddress, java.lang.Boolean emailVerified, java.lang.CharSequence phoneNumber, java.lang.Boolean phoneVerified, com.practicaldime.common.avro.LocationAvro address, java.lang.CharSequence updatedBy, java.lang.CharSequence createdTs) {
    this.id = id;
    this.firstName = firstName;
    this.lastName = lastName;
    this.emailAddress = emailAddress;
    this.emailVerified = emailVerified;
    this.phoneNumber = phoneNumber;
    this.phoneVerified = phoneVerified;
    this.address = address;
    this.updatedBy = updatedBy;
    this.createdTs = createdTs;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return firstName;
    case 2: return lastName;
    case 3: return emailAddress;
    case 4: return emailVerified;
    case 5: return phoneNumber;
    case 6: return phoneVerified;
    case 7: return address;
    case 8: return updatedBy;
    case 9: return createdTs;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: firstName = (java.lang.CharSequence)value$; break;
    case 2: lastName = (java.lang.CharSequence)value$; break;
    case 3: emailAddress = (java.lang.CharSequence)value$; break;
    case 4: emailVerified = (java.lang.Boolean)value$; break;
    case 5: phoneNumber = (java.lang.CharSequence)value$; break;
    case 6: phoneVerified = (java.lang.Boolean)value$; break;
    case 7: address = (com.practicaldime.common.avro.LocationAvro)value$; break;
    case 8: updatedBy = (java.lang.CharSequence)value$; break;
    case 9: createdTs = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'firstName' field.
   * @return The value of the 'firstName' field.
   */
  public java.lang.CharSequence getFirstName() {
    return firstName;
  }


  /**
   * Sets the value of the 'firstName' field.
   * @param value the value to set.
   */
  public void setFirstName(java.lang.CharSequence value) {
    this.firstName = value;
  }

  /**
   * Gets the value of the 'lastName' field.
   * @return The value of the 'lastName' field.
   */
  public java.lang.CharSequence getLastName() {
    return lastName;
  }


  /**
   * Sets the value of the 'lastName' field.
   * @param value the value to set.
   */
  public void setLastName(java.lang.CharSequence value) {
    this.lastName = value;
  }

  /**
   * Gets the value of the 'emailAddress' field.
   * @return The value of the 'emailAddress' field.
   */
  public java.lang.CharSequence getEmailAddress() {
    return emailAddress;
  }


  /**
   * Sets the value of the 'emailAddress' field.
   * @param value the value to set.
   */
  public void setEmailAddress(java.lang.CharSequence value) {
    this.emailAddress = value;
  }

  /**
   * Gets the value of the 'emailVerified' field.
   * @return The value of the 'emailVerified' field.
   */
  public boolean getEmailVerified() {
    return emailVerified;
  }


  /**
   * Sets the value of the 'emailVerified' field.
   * @param value the value to set.
   */
  public void setEmailVerified(boolean value) {
    this.emailVerified = value;
  }

  /**
   * Gets the value of the 'phoneNumber' field.
   * @return The value of the 'phoneNumber' field.
   */
  public java.lang.CharSequence getPhoneNumber() {
    return phoneNumber;
  }


  /**
   * Sets the value of the 'phoneNumber' field.
   * @param value the value to set.
   */
  public void setPhoneNumber(java.lang.CharSequence value) {
    this.phoneNumber = value;
  }

  /**
   * Gets the value of the 'phoneVerified' field.
   * @return The value of the 'phoneVerified' field.
   */
  public boolean getPhoneVerified() {
    return phoneVerified;
  }


  /**
   * Sets the value of the 'phoneVerified' field.
   * @param value the value to set.
   */
  public void setPhoneVerified(boolean value) {
    this.phoneVerified = value;
  }

  /**
   * Gets the value of the 'address' field.
   * @return The value of the 'address' field.
   */
  public com.practicaldime.common.avro.LocationAvro getAddress() {
    return address;
  }


  /**
   * Sets the value of the 'address' field.
   * @param value the value to set.
   */
  public void setAddress(com.practicaldime.common.avro.LocationAvro value) {
    this.address = value;
  }

  /**
   * Gets the value of the 'updatedBy' field.
   * @return The value of the 'updatedBy' field.
   */
  public java.lang.CharSequence getUpdatedBy() {
    return updatedBy;
  }


  /**
   * Sets the value of the 'updatedBy' field.
   * @param value the value to set.
   */
  public void setUpdatedBy(java.lang.CharSequence value) {
    this.updatedBy = value;
  }

  /**
   * Gets the value of the 'createdTs' field.
   * @return The value of the 'createdTs' field.
   */
  public java.lang.CharSequence getCreatedTs() {
    return createdTs;
  }


  /**
   * Sets the value of the 'createdTs' field.
   * @param value the value to set.
   */
  public void setCreatedTs(java.lang.CharSequence value) {
    this.createdTs = value;
  }

  /**
   * Creates a new ProfileAvro RecordBuilder.
   * @return A new ProfileAvro RecordBuilder
   */
  public static com.practicaldime.common.avro.ProfileAvro.Builder newBuilder() {
    return new com.practicaldime.common.avro.ProfileAvro.Builder();
  }

  /**
   * Creates a new ProfileAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ProfileAvro RecordBuilder
   */
  public static com.practicaldime.common.avro.ProfileAvro.Builder newBuilder(com.practicaldime.common.avro.ProfileAvro.Builder other) {
    if (other == null) {
      return new com.practicaldime.common.avro.ProfileAvro.Builder();
    } else {
      return new com.practicaldime.common.avro.ProfileAvro.Builder(other);
    }
  }

  /**
   * Creates a new ProfileAvro RecordBuilder by copying an existing ProfileAvro instance.
   * @param other The existing instance to copy.
   * @return A new ProfileAvro RecordBuilder
   */
  public static com.practicaldime.common.avro.ProfileAvro.Builder newBuilder(com.practicaldime.common.avro.ProfileAvro other) {
    if (other == null) {
      return new com.practicaldime.common.avro.ProfileAvro.Builder();
    } else {
      return new com.practicaldime.common.avro.ProfileAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for ProfileAvro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ProfileAvro>
    implements org.apache.avro.data.RecordBuilder<ProfileAvro> {

    private java.lang.CharSequence id;
    private java.lang.CharSequence firstName;
    private java.lang.CharSequence lastName;
    private java.lang.CharSequence emailAddress;
    private boolean emailVerified;
    private java.lang.CharSequence phoneNumber;
    private boolean phoneVerified;
    private com.practicaldime.common.avro.LocationAvro address;
    private com.practicaldime.common.avro.LocationAvro.Builder addressBuilder;
    private java.lang.CharSequence updatedBy;
    private java.lang.CharSequence createdTs;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.practicaldime.common.avro.ProfileAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.firstName)) {
        this.firstName = data().deepCopy(fields()[1].schema(), other.firstName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.lastName)) {
        this.lastName = data().deepCopy(fields()[2].schema(), other.lastName);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.emailAddress)) {
        this.emailAddress = data().deepCopy(fields()[3].schema(), other.emailAddress);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.emailVerified)) {
        this.emailVerified = data().deepCopy(fields()[4].schema(), other.emailVerified);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.phoneNumber)) {
        this.phoneNumber = data().deepCopy(fields()[5].schema(), other.phoneNumber);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.phoneVerified)) {
        this.phoneVerified = data().deepCopy(fields()[6].schema(), other.phoneVerified);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.address)) {
        this.address = data().deepCopy(fields()[7].schema(), other.address);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (other.hasAddressBuilder()) {
        this.addressBuilder = com.practicaldime.common.avro.LocationAvro.newBuilder(other.getAddressBuilder());
      }
      if (isValidValue(fields()[8], other.updatedBy)) {
        this.updatedBy = data().deepCopy(fields()[8].schema(), other.updatedBy);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.createdTs)) {
        this.createdTs = data().deepCopy(fields()[9].schema(), other.createdTs);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
    }

    /**
     * Creates a Builder by copying an existing ProfileAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.practicaldime.common.avro.ProfileAvro other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.firstName)) {
        this.firstName = data().deepCopy(fields()[1].schema(), other.firstName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.lastName)) {
        this.lastName = data().deepCopy(fields()[2].schema(), other.lastName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.emailAddress)) {
        this.emailAddress = data().deepCopy(fields()[3].schema(), other.emailAddress);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.emailVerified)) {
        this.emailVerified = data().deepCopy(fields()[4].schema(), other.emailVerified);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.phoneNumber)) {
        this.phoneNumber = data().deepCopy(fields()[5].schema(), other.phoneNumber);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.phoneVerified)) {
        this.phoneVerified = data().deepCopy(fields()[6].schema(), other.phoneVerified);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.address)) {
        this.address = data().deepCopy(fields()[7].schema(), other.address);
        fieldSetFlags()[7] = true;
      }
      this.addressBuilder = null;
      if (isValidValue(fields()[8], other.updatedBy)) {
        this.updatedBy = data().deepCopy(fields()[8].schema(), other.updatedBy);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.createdTs)) {
        this.createdTs = data().deepCopy(fields()[9].schema(), other.createdTs);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.practicaldime.common.avro.ProfileAvro.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.practicaldime.common.avro.ProfileAvro.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'firstName' field.
      * @return The value.
      */
    public java.lang.CharSequence getFirstName() {
      return firstName;
    }


    /**
      * Sets the value of the 'firstName' field.
      * @param value The value of 'firstName'.
      * @return This builder.
      */
    public com.practicaldime.common.avro.ProfileAvro.Builder setFirstName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.firstName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'firstName' field has been set.
      * @return True if the 'firstName' field has been set, false otherwise.
      */
    public boolean hasFirstName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'firstName' field.
      * @return This builder.
      */
    public com.practicaldime.common.avro.ProfileAvro.Builder clearFirstName() {
      firstName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastName' field.
      * @return The value.
      */
    public java.lang.CharSequence getLastName() {
      return lastName;
    }


    /**
      * Sets the value of the 'lastName' field.
      * @param value The value of 'lastName'.
      * @return This builder.
      */
    public com.practicaldime.common.avro.ProfileAvro.Builder setLastName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.lastName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'lastName' field has been set.
      * @return True if the 'lastName' field has been set, false otherwise.
      */
    public boolean hasLastName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'lastName' field.
      * @return This builder.
      */
    public com.practicaldime.common.avro.ProfileAvro.Builder clearLastName() {
      lastName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'emailAddress' field.
      * @return The value.
      */
    public java.lang.CharSequence getEmailAddress() {
      return emailAddress;
    }


    /**
      * Sets the value of the 'emailAddress' field.
      * @param value The value of 'emailAddress'.
      * @return This builder.
      */
    public com.practicaldime.common.avro.ProfileAvro.Builder setEmailAddress(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.emailAddress = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'emailAddress' field has been set.
      * @return True if the 'emailAddress' field has been set, false otherwise.
      */
    public boolean hasEmailAddress() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'emailAddress' field.
      * @return This builder.
      */
    public com.practicaldime.common.avro.ProfileAvro.Builder clearEmailAddress() {
      emailAddress = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'emailVerified' field.
      * @return The value.
      */
    public boolean getEmailVerified() {
      return emailVerified;
    }


    /**
      * Sets the value of the 'emailVerified' field.
      * @param value The value of 'emailVerified'.
      * @return This builder.
      */
    public com.practicaldime.common.avro.ProfileAvro.Builder setEmailVerified(boolean value) {
      validate(fields()[4], value);
      this.emailVerified = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'emailVerified' field has been set.
      * @return True if the 'emailVerified' field has been set, false otherwise.
      */
    public boolean hasEmailVerified() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'emailVerified' field.
      * @return This builder.
      */
    public com.practicaldime.common.avro.ProfileAvro.Builder clearEmailVerified() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'phoneNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getPhoneNumber() {
      return phoneNumber;
    }


    /**
      * Sets the value of the 'phoneNumber' field.
      * @param value The value of 'phoneNumber'.
      * @return This builder.
      */
    public com.practicaldime.common.avro.ProfileAvro.Builder setPhoneNumber(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.phoneNumber = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'phoneNumber' field has been set.
      * @return True if the 'phoneNumber' field has been set, false otherwise.
      */
    public boolean hasPhoneNumber() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'phoneNumber' field.
      * @return This builder.
      */
    public com.practicaldime.common.avro.ProfileAvro.Builder clearPhoneNumber() {
      phoneNumber = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'phoneVerified' field.
      * @return The value.
      */
    public boolean getPhoneVerified() {
      return phoneVerified;
    }


    /**
      * Sets the value of the 'phoneVerified' field.
      * @param value The value of 'phoneVerified'.
      * @return This builder.
      */
    public com.practicaldime.common.avro.ProfileAvro.Builder setPhoneVerified(boolean value) {
      validate(fields()[6], value);
      this.phoneVerified = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'phoneVerified' field has been set.
      * @return True if the 'phoneVerified' field has been set, false otherwise.
      */
    public boolean hasPhoneVerified() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'phoneVerified' field.
      * @return This builder.
      */
    public com.practicaldime.common.avro.ProfileAvro.Builder clearPhoneVerified() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'address' field.
      * @return The value.
      */
    public com.practicaldime.common.avro.LocationAvro getAddress() {
      return address;
    }


    /**
      * Sets the value of the 'address' field.
      * @param value The value of 'address'.
      * @return This builder.
      */
    public com.practicaldime.common.avro.ProfileAvro.Builder setAddress(com.practicaldime.common.avro.LocationAvro value) {
      validate(fields()[7], value);
      this.addressBuilder = null;
      this.address = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'address' field has been set.
      * @return True if the 'address' field has been set, false otherwise.
      */
    public boolean hasAddress() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'address' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.practicaldime.common.avro.LocationAvro.Builder getAddressBuilder() {
      if (addressBuilder == null) {
        if (hasAddress()) {
          setAddressBuilder(com.practicaldime.common.avro.LocationAvro.newBuilder(address));
        } else {
          setAddressBuilder(com.practicaldime.common.avro.LocationAvro.newBuilder());
        }
      }
      return addressBuilder;
    }

    /**
     * Sets the Builder instance for the 'address' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.practicaldime.common.avro.ProfileAvro.Builder setAddressBuilder(com.practicaldime.common.avro.LocationAvro.Builder value) {
      clearAddress();
      addressBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'address' field has an active Builder instance
     * @return True if the 'address' field has an active Builder instance
     */
    public boolean hasAddressBuilder() {
      return addressBuilder != null;
    }

    /**
      * Clears the value of the 'address' field.
      * @return This builder.
      */
    public com.practicaldime.common.avro.ProfileAvro.Builder clearAddress() {
      address = null;
      addressBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'updatedBy' field.
      * @return The value.
      */
    public java.lang.CharSequence getUpdatedBy() {
      return updatedBy;
    }


    /**
      * Sets the value of the 'updatedBy' field.
      * @param value The value of 'updatedBy'.
      * @return This builder.
      */
    public com.practicaldime.common.avro.ProfileAvro.Builder setUpdatedBy(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.updatedBy = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'updatedBy' field has been set.
      * @return True if the 'updatedBy' field has been set, false otherwise.
      */
    public boolean hasUpdatedBy() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'updatedBy' field.
      * @return This builder.
      */
    public com.practicaldime.common.avro.ProfileAvro.Builder clearUpdatedBy() {
      updatedBy = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdTs' field.
      * @return The value.
      */
    public java.lang.CharSequence getCreatedTs() {
      return createdTs;
    }


    /**
      * Sets the value of the 'createdTs' field.
      * @param value The value of 'createdTs'.
      * @return This builder.
      */
    public com.practicaldime.common.avro.ProfileAvro.Builder setCreatedTs(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.createdTs = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'createdTs' field has been set.
      * @return True if the 'createdTs' field has been set, false otherwise.
      */
    public boolean hasCreatedTs() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'createdTs' field.
      * @return This builder.
      */
    public com.practicaldime.common.avro.ProfileAvro.Builder clearCreatedTs() {
      createdTs = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ProfileAvro build() {
      try {
        ProfileAvro record = new ProfileAvro();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.firstName = fieldSetFlags()[1] ? this.firstName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.lastName = fieldSetFlags()[2] ? this.lastName : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.emailAddress = fieldSetFlags()[3] ? this.emailAddress : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.emailVerified = fieldSetFlags()[4] ? this.emailVerified : (java.lang.Boolean) defaultValue(fields()[4]);
        record.phoneNumber = fieldSetFlags()[5] ? this.phoneNumber : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.phoneVerified = fieldSetFlags()[6] ? this.phoneVerified : (java.lang.Boolean) defaultValue(fields()[6]);
        if (addressBuilder != null) {
          try {
            record.address = this.addressBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("address"));
            throw e;
          }
        } else {
          record.address = fieldSetFlags()[7] ? this.address : (com.practicaldime.common.avro.LocationAvro) defaultValue(fields()[7]);
        }
        record.updatedBy = fieldSetFlags()[8] ? this.updatedBy : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.createdTs = fieldSetFlags()[9] ? this.createdTs : (java.lang.CharSequence) defaultValue(fields()[9]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ProfileAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<ProfileAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ProfileAvro>
    READER$ = (org.apache.avro.io.DatumReader<ProfileAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.id == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.id);
    }

    if (this.firstName == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.firstName);
    }

    if (this.lastName == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.lastName);
    }

    out.writeString(this.emailAddress);

    out.writeBoolean(this.emailVerified);

    if (this.phoneNumber == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.phoneNumber);
    }

    out.writeBoolean(this.phoneVerified);

    if (this.address == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.address.customEncode(out);
    }

    if (this.updatedBy == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.updatedBy);
    }

    if (this.createdTs == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.createdTs);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 0) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.firstName = null;
      } else {
        this.firstName = in.readString(this.firstName instanceof Utf8 ? (Utf8)this.firstName : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.lastName = null;
      } else {
        this.lastName = in.readString(this.lastName instanceof Utf8 ? (Utf8)this.lastName : null);
      }

      this.emailAddress = in.readString(this.emailAddress instanceof Utf8 ? (Utf8)this.emailAddress : null);

      this.emailVerified = in.readBoolean();

      if (in.readIndex() != 0) {
        in.readNull();
        this.phoneNumber = null;
      } else {
        this.phoneNumber = in.readString(this.phoneNumber instanceof Utf8 ? (Utf8)this.phoneNumber : null);
      }

      this.phoneVerified = in.readBoolean();

      if (in.readIndex() != 1) {
        in.readNull();
        this.address = null;
      } else {
        if (this.address == null) {
          this.address = new com.practicaldime.common.avro.LocationAvro();
        }
        this.address.customDecode(in);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.updatedBy = null;
      } else {
        this.updatedBy = in.readString(this.updatedBy instanceof Utf8 ? (Utf8)this.updatedBy : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.createdTs = null;
      } else {
        this.createdTs = in.readString(this.createdTs instanceof Utf8 ? (Utf8)this.createdTs : null);
      }

    } else {
      for (int i = 0; i < 10; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 0) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);
          }
          break;

        case 1:
          if (in.readIndex() != 0) {
            in.readNull();
            this.firstName = null;
          } else {
            this.firstName = in.readString(this.firstName instanceof Utf8 ? (Utf8)this.firstName : null);
          }
          break;

        case 2:
          if (in.readIndex() != 0) {
            in.readNull();
            this.lastName = null;
          } else {
            this.lastName = in.readString(this.lastName instanceof Utf8 ? (Utf8)this.lastName : null);
          }
          break;

        case 3:
          this.emailAddress = in.readString(this.emailAddress instanceof Utf8 ? (Utf8)this.emailAddress : null);
          break;

        case 4:
          this.emailVerified = in.readBoolean();
          break;

        case 5:
          if (in.readIndex() != 0) {
            in.readNull();
            this.phoneNumber = null;
          } else {
            this.phoneNumber = in.readString(this.phoneNumber instanceof Utf8 ? (Utf8)this.phoneNumber : null);
          }
          break;

        case 6:
          this.phoneVerified = in.readBoolean();
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.address = null;
          } else {
            if (this.address == null) {
              this.address = new com.practicaldime.common.avro.LocationAvro();
            }
            this.address.customDecode(in);
          }
          break;

        case 8:
          if (in.readIndex() != 0) {
            in.readNull();
            this.updatedBy = null;
          } else {
            this.updatedBy = in.readString(this.updatedBy instanceof Utf8 ? (Utf8)this.updatedBy : null);
          }
          break;

        case 9:
          if (in.readIndex() != 0) {
            in.readNull();
            this.createdTs = null;
          } else {
            this.createdTs = in.readString(this.createdTs instanceof Utf8 ? (Utf8)this.createdTs : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










